{"ast":null,"code":"var _jsxFileName = \"/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/comments/CommentEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getCommentById, updateComment } from \"../../managers/CommentManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentEdit = () => {\n  _s();\n\n  const {\n    commentId,\n    postId\n  } = useParams();\n  const Navigate = useNavigate();\n  const [comment, setComment] = useState({});\n  useEffect(() => {\n    getCommentById(commentId).then(setComment);\n  }, [commentId]);\n\n  const changeCommentState = domEvent => {\n    const updatedComment = { ...comment\n    };\n    updatedComment[domEvent.target.name] = domEvent.target.value;\n    setComment(updatedComment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"commentForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"commentForm__title\",\n        children: comment.post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            value: comment.content,\n            onChange: changeCommentState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: evt => {\n          // prevents the form from being submitted\n          evt.preventDefault();\n          const updatedComment = {\n            content: comment.content,\n            post_id: comment.post_id\n          }; // Send POST request to API\n\n          updateComment(commentId, updatedComment).then(() => Navigate(`/posts/${postId}/comments`));\n        },\n        className: \"btn btn-primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentEdit, \"vrw0IuX0XY5kf49YdCqoXJCzpXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CommentEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentEdit\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","getCommentById","updateComment","CommentEdit","commentId","postId","Navigate","comment","setComment","then","changeCommentState","domEvent","updatedComment","target","name","value","post","content","evt","preventDefault","post_id"],"sources":["/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/comments/CommentEdit.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { getCommentById, updateComment } from \"../../managers/CommentManager\"\n\nexport const CommentEdit = () => {\n\n    const { commentId, postId } = useParams()\n    const Navigate = useNavigate()\n\n    const [comment, setComment] = useState({})\n\n    useEffect(() => {\n        getCommentById(commentId).then(setComment)\n    }, [commentId]\n    )\n\n    const changeCommentState = (domEvent) => {\n        const updatedComment = {...comment}\n        updatedComment[domEvent.target.name] = domEvent.target.value\n        setComment(updatedComment)\n    }\n\n    return(\n        <>\n            <h1>Edit Comment</h1>\n            <form className=\"commentForm\">\n                <h2 className=\"commentForm__title\">{comment.post}</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"content\">Comment:</label>\n                        <input type=\"text\" name=\"content\" required autoFocus className=\"form-control\" value={comment.content}\n                            onChange={changeCommentState} />\n                    </div>\n                </fieldset>\n                \n                <button type=\"submit\" onClick={evt => {\n                    // prevents the form from being submitted\n                    evt.preventDefault()\n                    \n                    \n                    const updatedComment = {\n                        content: comment.content,\n                        post_id: comment.post_id\n                        \n                    }\n                    // Send POST request to API\n                    updateComment(commentId, updatedComment)\n                    .then(() => Navigate(`/posts/${postId}/comments`))\n                }}\n                className=\"btn btn-primary\">Update</button>\n            </form>\n        </>\n        )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,+BAA9C;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAE7B,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAwBL,SAAS,EAAvC;EACA,MAAMM,QAAQ,GAAGP,WAAW,EAA5B;EAEA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZI,cAAc,CAACG,SAAD,CAAd,CAA0BK,IAA1B,CAA+BD,UAA/B;EACH,CAFQ,EAEN,CAACJ,SAAD,CAFM,CAAT;;EAKA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;IACrC,MAAMC,cAAc,GAAG,EAAC,GAAGL;IAAJ,CAAvB;IACAK,cAAc,CAACD,QAAQ,CAACE,MAAT,CAAgBC,IAAjB,CAAd,GAAuCH,QAAQ,CAACE,MAAT,CAAgBE,KAAvD;IACAP,UAAU,CAACI,cAAD,CAAV;EACH,CAJD;;EAMA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,SAAS,EAAC,aAAhB;MAAA,wBACI;QAAI,SAAS,EAAC,oBAAd;QAAA,UAAoCL,OAAO,CAACS;MAA5C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,uBACI;UAAK,SAAS,EAAC,YAAf;UAAA,wBACI;YAAO,OAAO,EAAC,SAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAO,IAAI,EAAC,MAAZ;YAAmB,IAAI,EAAC,SAAxB;YAAkC,QAAQ,MAA1C;YAA2C,SAAS,MAApD;YAAqD,SAAS,EAAC,cAA/D;YAA8E,KAAK,EAAET,OAAO,CAACU,OAA7F;YACI,QAAQ,EAAEP;UADd;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAUI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEQ,GAAG,IAAI;UAClC;UACAA,GAAG,CAACC,cAAJ;UAGA,MAAMP,cAAc,GAAG;YACnBK,OAAO,EAAEV,OAAO,CAACU,OADE;YAEnBG,OAAO,EAAEb,OAAO,CAACa;UAFE,CAAvB,CALkC,CAUlC;;UACAlB,aAAa,CAACE,SAAD,EAAYQ,cAAZ,CAAb,CACCH,IADD,CACM,MAAMH,QAAQ,CAAE,UAASD,MAAO,WAAlB,CADpB;QAEH,CAbD;QAcA,SAAS,EAAC,iBAdV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AA+BH,CAjDM;;GAAMF,W;UAEqBH,S,EACbD,W;;;KAHRI,W"},"metadata":{},"sourceType":"module"}