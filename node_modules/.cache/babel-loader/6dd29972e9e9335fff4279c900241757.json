{"ast":null,"code":"var _jsxFileName = \"/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/comments/CommentList.js\",\n    _s = $RefreshSig$();\n\n// deconstruct param from view comments link \n// !! Change Comment in SQL to have user_id instead of author_id !!\n// fetch comments joined by user_id filtered by post_id \n// .map through Comment passing down  id comments.user.first comments.user.last comments.content\n// if local_user_id = user_id ? render with trashcan icon\n// else render no trash can \nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { deleteComment, getCommentsByPostId } from \"./CommentManager\";\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentsList = () => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const localUser = localStorage.getItem(\"auth_token\");\n  const userObject = JSON.parse(localUser);\n  useEffect(() => {\n    getCommentsByPostId(postId).then(commentArray => {\n      setComments(commentArray);\n    });\n  }, []);\n\n  const deleteButton = id => {\n    return deleteComment(id).then(() => {\n      getCommentsByPostId(postId).then(commentArray => {\n        setComments(commentArray);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"comments:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inLine\",\n          children: [comment === null || comment === void 0 ? void 0 : comment.content, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: userObject === comment.author_id ? /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n              onClick: () => {\n                deleteButton(comment.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentsList, \"mjcMEWhdGVTbN+/eoGitwcL61mI=\", false, function () {\n  return [useParams];\n});\n\n_c = CommentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["useEffect","useState","useParams","deleteComment","getCommentsByPostId","FaTrashAlt","CommentsList","comments","setComments","postId","localUser","localStorage","getItem","userObject","JSON","parse","then","commentArray","deleteButton","id","map","comment","content","author_id"],"sources":["/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/comments/CommentList.js"],"sourcesContent":["// deconstruct param from view comments link \n// !! Change Comment in SQL to have user_id instead of author_id !!\n// fetch comments joined by user_id filtered by post_id \n// .map through Comment passing down  id comments.user.first comments.user.last comments.content\n// if local_user_id = user_id ? render with trashcan icon\n// else render no trash can \n\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { deleteComment, getCommentsByPostId } from \"./CommentManager\"\nimport { FaTrashAlt } from 'react-icons/fa';\n\n\nexport const CommentsList = () => {\n    const [comments, setComments] = useState([])\n    const { postId } = useParams()\n\n    const localUser = localStorage.getItem(\"auth_token\")\n    const userObject = JSON.parse(localUser)\n\n    useEffect(\n        () => {\n            getCommentsByPostId(postId)\n                .then((commentArray) => {\n                    setComments(commentArray)\n                })\n        },\n        []\n    )\n\n    const deleteButton = (id) => {\n        return deleteComment(id)\n            .then(() => {\n                getCommentsByPostId(postId)\n                    .then((commentArray) => {\n                        setComments(commentArray)\n                    })\n            })\n    }\n\n\n    return <>\n        <h2>comments:<br /><br /></h2>\n        <div>\n            {\n                comments.map(comment => {\n                    return <div className=\"inLine\">\n                        {comment?.content} <div>\n                            {userObject === comment.author_id\n                                ? < FaTrashAlt onClick={() => {\n                                    deleteButton(comment.id)\n                                }\n                                } />\n                                : <></>\n                            }</div>\n                        <br />\n                    </div>\n                })\n            }\n        </div>\n    </>\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,kBAAnD;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM;IAAEQ;EAAF,IAAaP,SAAS,EAA5B;EAEA,MAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlB;EACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAnB;EAEAV,SAAS,CACL,MAAM;IACFI,mBAAmB,CAACK,MAAD,CAAnB,CACKO,IADL,CACWC,YAAD,IAAkB;MACpBT,WAAW,CAACS,YAAD,CAAX;IACH,CAHL;EAIH,CANI,EAOL,EAPK,CAAT;;EAUA,MAAMC,YAAY,GAAIC,EAAD,IAAQ;IACzB,OAAOhB,aAAa,CAACgB,EAAD,CAAb,CACFH,IADE,CACG,MAAM;MACRZ,mBAAmB,CAACK,MAAD,CAAnB,CACKO,IADL,CACWC,YAAD,IAAkB;QACpBT,WAAW,CAACS,YAAD,CAAX;MACH,CAHL;IAIH,CANE,CAAP;EAOH,CARD;;EAWA,oBAAO;IAAA,wBACH;MAAA,qCAAa;QAAA;QAAA;QAAA;MAAA,QAAb,eAAmB;QAAA;QAAA;QAAA;MAAA,QAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA,UAEQV,QAAQ,CAACa,GAAT,CAAaC,OAAO,IAAI;QACpB,oBAAO;UAAK,SAAS,EAAC,QAAf;UAAA,WACFA,OADE,aACFA,OADE,uBACFA,OAAO,CAAEC,OADP,oBACgB;YAAA,UACdT,UAAU,KAAKQ,OAAO,CAACE,SAAvB,gBACK,QAAE,UAAF;cAAa,OAAO,EAAE,MAAM;gBAC1BL,YAAY,CAACG,OAAO,CAACF,EAAT,CAAZ;cACH;YAFC;cAAA;cAAA;cAAA;YAAA,QADL,gBAKK;UANS;YAAA;YAAA;YAAA;UAAA,QADhB,eASH;YAAA;YAAA;YAAA;UAAA,QATG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAP;MAWH,CAZD;IAFR;MAAA;MAAA;MAAA;IAAA,QAFG;EAAA,gBAAP;AAoBH,CAhDM;;GAAMb,Y;UAEUJ,S;;;KAFVI,Y"},"metadata":{},"sourceType":"module"}