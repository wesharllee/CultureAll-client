{"ast":null,"code":"var _jsxFileName = \"/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/users/UserEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getUserById, updateUser, updateUserActive, updateUserStatus } from \"../../managers/UserManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserEdit = () => {\n  _s();\n\n  var _editUser$user, _editUser$user2, _editUser$user3;\n\n  const navigate = useNavigate();\n  const [editUser, setEditUser] = useState([]);\n  const {\n    userId\n  } = useParams();\n  useEffect(() => {\n    getUserById(userId).then(data => setEditUser(data));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"panel is-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-heading\",\n          children: [\"Change Access for User: \", editUser === null || editUser === void 0 ? void 0 : (_editUser$user = editUser.user) === null || _editUser$user === void 0 ? void 0 : _editUser$user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-block\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"is_staff\",\n                className: \"label\",\n                children: \"Access: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 37\n              }, this), editUser !== null && editUser !== void 0 && (_editUser$user2 = editUser.user) !== null && _editUser$user2 !== void 0 && _editUser$user2.is_staff ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const confirmBox = window.confirm(\"Confirm: Demote User to 'Author'\");\n                  if (confirmBox) updateUserStatus(userId).then(() => navigate(`/users/${userId}`));\n                },\n                children: \"Make Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const confirmBox = window.confirm(\"Confirm: Promote User to 'Admin'\");\n                  if (confirmBox) updateUserStaff(userId).then(() => navigate(`/users/${userId}`));\n                },\n                children: \"Make Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"active\",\n                className: \"label\",\n                children: \"Activation Status: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), editUser !== null && editUser !== void 0 && (_editUser$user3 = editUser.user) !== null && _editUser$user3 !== void 0 && _editUser$user3.is_active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const confirmBox = window.confirm(\"Confirm: Deactivate User\");\n                  if (confirmBox) updateUserActive(userId).then(() => navigate(`/users/${userId}`));\n                },\n                children: \"Deactivate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const confirmBox = window.confirm(\"Confirm: Reactivate User\");\n                  if (confirmBox) updateUserActive(userId).then(() => navigate(`/users/${userId}`));\n                },\n                children: \"Reactivate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, `user--${editUser.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        navigate(`/users`);\n      },\n      className: \"button is-success\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // import { useEffect, useState } from \"react\"\n// import { Navigate, useParams } from \"react-router-dom\"\n// import { getUserById, updateUser } from \"../../managers/UserManager\"\n// export const UserEdit = () => {\n//     const [rareUser, setRareUser] = useState({})\n//     const { userId } = useParams()\n//     useEffect(() => {\n//         getUserById(userId)\n//             .then(setRareUser)\n//     }, [userId])\n//     const handleSubmit = (evt) => {\n//         evt.preventDefault()\n//         updateUser(userId, rareUser).then((user) => {\n//             Navigate(`/users/${userId}`)\n//         })\n//     }\n//     const handleChange = (evt) => {\n//         const userCopy = {...rareUser}\n//         userCopy[evt.target.name] = evt.target.value\n//         setRareUser(userCopy)\n//     }\n//     return(\n//         <section className=\"section\">\n//             <article className=\"panel is-info\">\n//                 <h2 className=\"panel-heading\">Update User</h2>\n//                 <div className=\"panel-block\">\n//                     <form style={{ width: \"100%\" }}>\n//                         <div className=\"field\">\n//                             <label htmlFor=\"is_staff\" className=\"label\">Access: </label>\n//                                 <input key={`user--${userId}`}\n//                                     onChange={\n//                                         (evt) => {\n//                                             const copy = new Set(rareUser)\n//                                             const id = evt.target.id\n//                                             if(evt.target.checked) {\n//                                                 copy.add()\n//                                             }\n//                                         }\n//                                     }\n//                         </div>    \n//                     </form>    \n//                 </div>\n//             </article>\n//         </section>\n//     )\n// }\n\n_s(UserEdit, \"Gh/Pv0Vib9v3r8LtP37kUahqT58=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","getUserById","updateUser","updateUserActive","updateUserStatus","UserEdit","navigate","editUser","setEditUser","userId","then","data","user","username","width","is_staff","confirmBox","window","confirm","updateUserStaff","is_active","id"],"sources":["/Users/wesleyharllee/workspace/rare-v2-client/rare-client-v2-team-2/src/components/users/UserEdit.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { getUserById, updateUser, updateUserActive, updateUserStatus } from \"../../managers/UserManager\"\n\nexport const UserEdit = () => {\n    const navigate = useNavigate()\n    const [editUser, setEditUser] = useState([])\n    const { userId } = useParams()\n\n    useEffect(() => {\n        getUserById(userId).then(data => setEditUser(data))\n    }, [userId])\n    \n\n\n    return (\n        <>\n            <section key={`user--${editUser.id}`}className=\"section\">\n                    <article className=\"panel is-info\">\n                        <h2 className=\"panel-heading\">Change Access for User: {editUser?.user?.username}</h2>\n                        <div className=\"panel-block\">\n                            <form style={{ width: \"100%\" }}>\n                                <div className=\"field\">\n                                    <label htmlFor=\"is_staff\" className=\"label\">Access: </label>\n                                    {\n                                    editUser?.user?.is_staff \n                                    ?\n                                    <button\n                                    onClick={\n                                        () => {\n                                            const confirmBox = window.confirm(\"Confirm: Demote User to 'Author'\")\n                                            if  (confirmBox)\n                                            updateUserStatus(userId)\n                                        .then(() => navigate(`/users/${userId}`))\n                                    }}\n                                    >Make Author</button>\n                                    :\n                                    <button\n                                    onClick={\n                                        () => {\n                                            const confirmBox = window.confirm(\"Confirm: Promote User to 'Admin'\")\n                                            if  (confirmBox)\n                                            updateUserStaff(userId)\n                                        .then(() => navigate(`/users/${userId}`))\n                                    }}\n                                    >Make Admin</button>\n                                    }           \n                                </div>\n                                <div className=\"field\">\n                                    <label htmlFor=\"active\" className=\"label\">Activation Status: </label>\n                                    {\n                                    editUser?.user?.is_active \n                                    ?\n                                    <button\n                                        onClick={\n                                            () => {\n                                                const confirmBox = window.confirm(\"Confirm: Deactivate User\")\n                                                if  (confirmBox)\n                                                updateUserActive(userId)\n                                            .then(() => navigate(`/users/${userId}`))\n                                        }}\n                                    >Deactivate</button>\n                                    :\n                                    <button\n                                    onClick={\n                                        () => {\n                                            const confirmBox = window.confirm(\"Confirm: Reactivate User\")\n                                            if  (confirmBox)\n                                            updateUserActive(userId)\n                                        .then(() => navigate(`/users/${userId}`))\n                                    }}\n                                    >Reactivate</button>\n                                    }           \n                                </div>\n                            </form>\n                        </div>\n                    </article>\n            </section>\n\n            <button type=\"submit\"\n                onClick={() => {\n                        navigate(`/users`)\n                }} \n                className=\"button is-success\">Back\n            </button>\n        </>\n    )\n}\n\n\n\n\n\n\n\n// import { useEffect, useState } from \"react\"\n// import { Navigate, useParams } from \"react-router-dom\"\n// import { getUserById, updateUser } from \"../../managers/UserManager\"\n\n\n// export const UserEdit = () => {\n\n//     const [rareUser, setRareUser] = useState({})\n//     const { userId } = useParams()\n\n//     useEffect(() => {\n//         getUserById(userId)\n//             .then(setRareUser)\n//     }, [userId])\n\n//     const handleSubmit = (evt) => {\n//         evt.preventDefault()\n\n//         updateUser(userId, rareUser).then((user) => {\n//             Navigate(`/users/${userId}`)\n//         })\n//     }\n\n//     const handleChange = (evt) => {\n//         const userCopy = {...rareUser}\n//         userCopy[evt.target.name] = evt.target.value\n//         setRareUser(userCopy)\n//     }\n\n//     return(\n//         <section className=\"section\">\n//             <article className=\"panel is-info\">\n//                 <h2 className=\"panel-heading\">Update User</h2>\n//                 <div className=\"panel-block\">\n//                     <form style={{ width: \"100%\" }}>\n//                         <div className=\"field\">\n//                             <label htmlFor=\"is_staff\" className=\"label\">Access: </label>\n//                                 <input key={`user--${userId}`}\n//                                     onChange={\n//                                         (evt) => {\n//                                             const copy = new Set(rareUser)\n//                                             const id = evt.target.id\n//                                             if(evt.target.checked) {\n//                                                 copy.add()\n//                                             }\n//                                         }\n//                                     }\n\n                               \n//                         </div>    \n//                     </form>    \n//                 </div>\n//             </article>\n//         </section>\n//     )\n\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}